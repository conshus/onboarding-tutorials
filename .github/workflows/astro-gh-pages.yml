# Sample workflow for building and deploying an Astro site to GitHub Pages
#
# To get started with Astro see: https://docs.astro.build/en/getting-started/
#
name: Deploy Astro site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}
          
      - name: Get changed files
        id: changed-files
        run: |
            if ${{ github.event_name == 'pull_request' }}; then
                echo "changed_files=$(git diff --name-only -r HEAD^1 HEAD | xargs)" >> $GITHUB_OUTPUT
            else
                echo "changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | xargs)" >> $GITHUB_OUTPUT
            fi
            
      - name: Get folder name
        id: changed-folder
        run: |
            first_changed_file=$(echo "${{ steps.changed-files.outputs.changed_files }}" | cut -d ' ' -f 1)
            echo "First changed file: $first_changed_file"
            first_folder_name="${first_changed_file%%/*}"
            echo "Folder Name: $first_folder_name"
            echo "folder_name=$first_folder_name" >> $GITHUB_OUTPUT

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
            
      - name: Install
        shell: "bash"
        working-directory: "./${{ steps.changed-folder.outputs.folder_name }}/"
        run: npm install
  
      - name: Build
        shell: "bash"
        working-directory: "./${{ steps.changed-folder.outputs.folder_name }}/"
        run: npm run build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./${{ steps.changed-folder.outputs.folder_name }}/dist
          #Could be a good place to put version number
          destination_dir: ./${{ steps.changed-folder.outputs.folder_name }}
